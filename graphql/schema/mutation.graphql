type Mutation {
  # Auth

  "Sign in with email and password"
  login(
    "User email"
    email: String!

    "User password"
    password: String!
  ): LoginPayload

  "Refresh access token with refresh token"
  refreshAccessToken(refreshToken: String!): RefreshAccessTokenPayload

  "Revoke refresh token"
  revokeRefreshToken(refreshToken: String!): RevokeRefreshTokenPayload

  # User

  "Create user with UserInput"
  createUser(input: UserInput!): User

  "Update user with ID and UserUpdateInput"
  updateUser(
    "User ID"
    id: ID @isKind(kind: ADMIN)
    input: UserUpdateInput!
  ): User @isKind(kind: USER) @auth

  # File

  "Create file with FileInput"
  createFile(input: FileInput!): File @isKind(kind: USER) @auth

  "Update file with ID and FileUpdateInput"
  updateFile("File ID" id: ID!, input: FileUpdateInput!): File
    @isKind(kind: USER)
    @auth

  # "Delete file with ID"
  deleteFile("File ID" id: ID!): DeleteFilePayload @isKind(kind: USER) @auth

  "Remove tags from the file with file ID and tags IDs"
  removeTagsFromFile(
    "File ID"
    id: ID!

    "Tag IDs"
    tagIDs: [ID!]!
  ): RemoveTagsFromFilePayload @isKind(kind: USER) @auth

  # Tag

  "Create tag with TagInput"
  createTag(input: TagInput!): Tag @isKind(kind: USER) @auth
}
